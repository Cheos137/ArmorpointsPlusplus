plugins {
    id 'eclipse'
    id 'net.neoforged.gradle.userdev' version '7.+'
    id 'net.neoforged.gradle.mixin' version '7.+'
}

version = '1.21.7-' + modVersion
group = modGroup
base.archivesName = modName + '-neoforge'

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    // copyIdeResources = true
    accessTransformers.file file('src/main/resources/META-INF/accesstransformer.cfg')
}

subsystems.parchment {
    minecraftVersion = "1.21.5"
    mappingsVersion = "2025.06.15"
}

mixin {
    // add sourceSets.main, 'armorpointspp.refmap.json'
    config 'armorpointspp.mixins.json'
}

runs {
    client {
        workingDirectory 'run'
        // argument '-mixin.config=armorpointspp.mixins.json'
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        modSource sourceSets.main
    }
}

sourceSets.main.java { srcDir project(':core').sourceSets.main.java }
sourceSets.main.resources { srcDir project(':core').sourceSets.main.resources }

dependencies {
    implementation 'net.neoforged:neoforge:21.7.20-beta'
    implementation project(':core')
}

processResources {
    inputs.property 'version', modVersion

    filesMatching('META-INF/neoforge.mods.toml') {
        expand inputs.properties
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
